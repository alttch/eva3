#compdef lm-cmd

_lm-cmd_server() {
  local cword
  let cword=CURRENT-1
  if [[ $cword -eq 2 ]]; then
    compadd "$@" cleanup launch pkg-install plugins profile reload restart start status stop
  else
    _files
  fi
}

_lm-cmd_notifier() {
  local cword
  let cword=CURRENT-1
  if [[ $cword -eq 2 ]]; then
    compadd "$@" list restart
  else
    _files
  fi
}

_lm-cmd_corescript() {
  local cword
  let cword=CURRENT-1
  if [[ $cword -eq 2 ]]; then
    compadd "$@" delete edit list mqtt-subscribe mqtt-topics mqtt-unsubscribe reload
  else
    _files
  fi
}

_lm-cmd_controller() {
  local cword
  let cword=CURRENT-1
  if [[ $cword -eq 2 ]]; then
    compadd "$@" append disable enable get list props reload remove set test upnp-rescan
  else
    _files
  fi
}

_lm-cmd_ext() {
  local cword
  let cword=CURRENT-1
  if [[ $cword -eq 2 ]]; then
    compadd "$@" get list load modhelp modinfo mods set unload
  else
    _files
  fi
}

_lm-cmd_job() {
  local cword
  let cword=CURRENT-1
  if [[ $cword -eq 2 ]]; then
    compadd "$@" create destroy disable enable get list props set
  else
    _files
  fi
}

_lm-cmd_rule() {
  local cword
  let cword=CURRENT-1
  if [[ $cword -eq 2 ]]; then
    compadd "$@" create destroy disable enable get list props set
  else
    _files
  fi
}

_lm-cmd_edit() {
  local cword
  let cword=CURRENT-1
  if [[ $cword -eq 2 ]]; then
    compadd "$@" corescript macro plugin-config server-config
  else
    _files
  fi
}

_lm-cmd_cycle() {
  local cword
  let cword=CURRENT-1
  if [[ $cword -eq 2 ]]; then
    compadd "$@" create destroy get list props reset set start stop
  else
    _files
  fi
}

_lm-cmd_macro() {
  local cword
  let cword=CURRENT-1
  if [[ $cword -eq 2 ]]; then
    compadd "$@" create destroy edit get list props result run set
  else
    _files
  fi
}

_lm-cmd_config() {
  local cword
  let cword=CURRENT-1
  if [[ $cword -eq 2 ]]; then
    compadd "$@" get props save set
  else
    _files
  fi
}

_lm-cmd_user() {
  local cword
  let cword=CURRENT-1
  if [[ $cword -eq 2 ]]; then
    compadd "$@" create destroy drop-tokens key list password tokens
  else
    _files
  fi
}

_lm-cmd_key() {
  local cword
  let cword=CURRENT-1
  if [[ $cword -eq 2 ]]; then
    compadd "$@" create destroy list props regenerate set
  else
    _files
  fi
}

_lm-cmd_file() {
  local cword
  let cword=CURRENT-1
  if [[ $cword -eq 2 ]]; then
    compadd "$@" create get mod unlink upload
  else
    _files
  fi
}

_lm-cmd_cvar() {
  local cword
  let cword=CURRENT-1
  if [[ $cword -eq 2 ]]; then
    compadd "$@" delete get list set
  else
    _files
  fi
}

_lm-cmd_log() {
  local cword
  let cword=CURRENT-1
  if [[ $cword -eq 2 ]]; then
    compadd "$@" api critical debug error get info warning
  else
    _files
  fi
}

_lm-cmd() {
  local cword
  let cword=CURRENT-1
  if [[ $cword -eq 1 ]]; then
    compadd "$@" clear cmd config controller corescript create cvar cycle debug destroy dump edit ext file history job key list lock log macro notifier remote reset rule save server set slog state test toggle unlock user watch
  else
    case "${words[2]}" in
      config|controller|corescript|cvar|cycle|edit|ext|file|job|key|log|macro|notifier|rule|server|user)
        _lm-cmd_${words[2]}
        ;;
      *)
        _files
        ;;
    esac
  fi
}
