_uc-cmd_server() {
  local cur prev words cword
  _init_completion || return
  if [[ $cword -eq 2 ]]; then
    COMPREPLY=( $( compgen -W 'cleanup exceptions exec-code launch pkg-install plugins profile reload restart start status stop' -- "$cur" ))
  else
    COMPREPLY=( $( compgen -W '$(ls)' -- $cur ))
  fi
}

_uc-cmd_notifier() {
  local cur prev words cword
  _init_completion || return
  if [[ $cword -eq 2 ]]; then
    COMPREPLY=( $( compgen -W 'list restart' -- "$cur" ))
  else
    COMPREPLY=( $( compgen -W '$(ls)' -- $cur ))
  fi
}

_uc-cmd_corescript() {
  local cur prev words cword
  _init_completion || return
  if [[ $cword -eq 2 ]]; then
    COMPREPLY=( $( compgen -W 'delete edit list mqtt-subscribe mqtt-topics mqtt-unsubscribe reload' -- "$cur" ))
  else
    COMPREPLY=( $( compgen -W '$(ls)' -- $cur ))
  fi
}

_uc-cmd_datapuller() {
  local cur prev words cword
  _init_completion || return
  if [[ $cword -eq 2 ]]; then
    COMPREPLY=( $( compgen -W 'create destroy list restart start stop' -- "$cur" ))
  else
    COMPREPLY=( $( compgen -W '$(ls)' -- $cur ))
  fi
}

_uc-cmd_driver() {
  local cur prev words cword
  _init_completion || return
  if [[ $cword -eq 2 ]]; then
    COMPREPLY=( $( compgen -W 'assign get list load set unassign unload' -- "$cur" ))
  else
    COMPREPLY=( $( compgen -W '$(ls)' -- $cur ))
  fi
}

_uc-cmd_lpi() {
  local cur prev words cword
  _init_completion || return
  if [[ $cword -eq 2 ]]; then
    COMPREPLY=( $( compgen -W 'modhelp modinfo mods' -- "$cur" ))
  else
    COMPREPLY=( $( compgen -W '$(ls)' -- $cur ))
  fi
}

_uc-cmd_phi() {
  local cur prev words cword
  _init_completion || return
  if [[ $cword -eq 2 ]]; then
    COMPREPLY=( $( compgen -W 'discover download exec get list load modhelp modinfo mods ports set test unlink unload' -- "$cur" ))
  else
    COMPREPLY=( $( compgen -W '$(ls)' -- $cur ))
  fi
}

_uc-cmd_owfs() {
  local cur prev words cword
  _init_completion || return
  if [[ $cword -eq 2 ]]; then
    COMPREPLY=( $( compgen -W 'create destroy list scan test' -- "$cur" ))
  else
    COMPREPLY=( $( compgen -W '$(ls)' -- $cur ))
  fi
}

_uc-cmd_modbus-slave() {
  local cur prev words cword
  _init_completion || return
  if [[ $cword -eq 2 ]]; then
    COMPREPLY=( $( compgen -W 'get' -- "$cur" ))
  else
    COMPREPLY=( $( compgen -W '$(ls)' -- $cur ))
  fi
}

_uc-cmd_modbus() {
  local cur prev words cword
  _init_completion || return
  if [[ $cword -eq 2 ]]; then
    COMPREPLY=( $( compgen -W 'create destroy list read test write' -- "$cur" ))
  else
    COMPREPLY=( $( compgen -W '$(ls)' -- $cur ))
  fi
}

_uc-cmd_device() {
  local cur prev words cword
  _init_completion || return
  if [[ $cword -eq 2 ]]; then
    COMPREPLY=( $( compgen -W 'deploy templates undeploy update' -- "$cur" ))
  else
    COMPREPLY=( $( compgen -W '$(ls)' -- $cur ))
  fi
}

_uc-cmd_maintenance() {
  local cur prev words cword
  _init_completion || return
  if [[ $cword -eq 2 ]]; then
    COMPREPLY=( $( compgen -W 'start stop' -- "$cur" ))
  else
    COMPREPLY=( $( compgen -W '$(ls)' -- $cur ))
  fi
}

_uc-cmd_clone() {
  local cur prev words cword
  _init_completion || return
  if [[ $cword -eq 2 ]]; then
    COMPREPLY=( $( compgen -W 'group item' -- "$cur" ))
  else
    COMPREPLY=( $( compgen -W '$(ls)' -- $cur ))
  fi
}

_uc-cmd_config() {
  local cur prev words cword
  _init_completion || return
  if [[ $cword -eq 2 ]]; then
    COMPREPLY=( $( compgen -W 'get props save set' -- "$cur" ))
  else
    COMPREPLY=( $( compgen -W '$(ls)' -- $cur ))
  fi
}

_uc-cmd_edit() {
  local cur prev words cword
  _init_completion || return
  if [[ $cword -eq 2 ]]; then
    COMPREPLY=( $( compgen -W 'action corescript plugin-config server-config template update' -- "$cur" ))
  else
    COMPREPLY=( $( compgen -W '$(ls)' -- $cur ))
  fi
}

_uc-cmd_action() {
  local cur prev words cword
  _init_completion || return
  if [[ $cword -eq 2 ]]; then
    COMPREPLY=( $( compgen -W 'clear disable enable exec kill result terminate toggle' -- "$cur" ))
  else
    COMPREPLY=( $( compgen -W '$(ls)' -- $cur ))
  fi
}

_uc-cmd_user() {
  local cur prev words cword
  _init_completion || return
  if [[ $cword -eq 2 ]]; then
    COMPREPLY=( $( compgen -W 'create destroy drop-tokens key list password tokens' -- "$cur" ))
  else
    COMPREPLY=( $( compgen -W '$(ls)' -- $cur ))
  fi
}

_uc-cmd_key() {
  local cur prev words cword
  _init_completion || return
  if [[ $cword -eq 2 ]]; then
    COMPREPLY=( $( compgen -W 'create destroy list props regenerate set' -- "$cur" ))
  else
    COMPREPLY=( $( compgen -W '$(ls)' -- $cur ))
  fi
}

_uc-cmd_file() {
  local cur prev words cword
  _init_completion || return
  if [[ $cword -eq 2 ]]; then
    COMPREPLY=( $( compgen -W 'create get mod unlink upload' -- "$cur" ))
  else
    COMPREPLY=( $( compgen -W '$(ls)' -- $cur ))
  fi
}

_uc-cmd_cvar() {
  local cur prev words cword
  _init_completion || return
  if [[ $cword -eq 2 ]]; then
    COMPREPLY=( $( compgen -W 'delete get list set' -- "$cur" ))
  else
    COMPREPLY=( $( compgen -W '$(ls)' -- $cur ))
  fi
}

_uc-cmd_log() {
  local cur prev words cword
  _init_completion || return
  if [[ $cword -eq 2 ]]; then
    COMPREPLY=( $( compgen -W 'api critical debug error get info warning' -- "$cur" ))
  else
    COMPREPLY=( $( compgen -W '$(ls)' -- $cur ))
  fi
}

_uc-cmd() {
  local cur prev words cword
  _init_completion || return
  if [[ $cword -eq 1 ]]; then
    COMPREPLY=( $( compgen -W 'action clone cmd config corescript create cvar datapuller debug destroy device driver dump edit file history key list lock log lpi maintenance modbus modbus-slave notifier owfs phi save server slog state test unlock update user watch' -- "$cur" ))
  else
    case "${words[1]}" in
      action|clone|config|corescript|cvar|datapuller|device|driver|edit|file|key|log|lpi|maintenance|modbus|modbus-slave|notifier|owfs|phi|server|user)
        _uc-cmd_${words[1]}
        ;;
      *)
        COMPREPLY=( $( compgen -W '$(ls)' -- $cur ))
        ;;
    esac
  fi
}

complete -F _uc-cmd uc-cmd