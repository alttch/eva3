_lm-cmd_server() {
  local cur prev words cword
  _init_completion || return
  if [[ $cword -eq 2 ]]; then
    COMPREPLY=( $( compgen -W 'launch reload restart start status stop' -- "$cur" ))
  else
    COMPREPLY=( $( compgen -W '$(ls)' -- $cur ))
  fi
}

_lm-cmd_controller() {
  local cur prev words cword
  _init_completion || return
  if [[ $cword -eq 2 ]]; then
    COMPREPLY=( $( compgen -W 'append disable enable get list props reload remove set test' -- "$cur" ))
  else
    COMPREPLY=( $( compgen -W '$(ls)' -- $cur ))
  fi
}

_lm-cmd_ext() {
  local cur prev words cword
  _init_completion || return
  if [[ $cword -eq 2 ]]; then
    COMPREPLY=( $( compgen -W 'get list load modhelp modinfo mods set unload' -- "$cur" ))
  else
    COMPREPLY=( $( compgen -W '$(ls)' -- $cur ))
  fi
}

_lm-cmd_job() {
  local cur prev words cword
  _init_completion || return
  if [[ $cword -eq 2 ]]; then
    COMPREPLY=( $( compgen -W 'create destroy disable enable get list props set' -- "$cur" ))
  else
    COMPREPLY=( $( compgen -W '$(ls)' -- $cur ))
  fi
}

_lm-cmd_rule() {
  local cur prev words cword
  _init_completion || return
  if [[ $cword -eq 2 ]]; then
    COMPREPLY=( $( compgen -W 'create destroy disable enable get list props set' -- "$cur" ))
  else
    COMPREPLY=( $( compgen -W '$(ls)' -- $cur ))
  fi
}

_lm-cmd_edit() {
  local cur prev words cword
  _init_completion || return
  if [[ $cword -eq 2 ]]; then
    COMPREPLY=( $( compgen -W 'macro server-config' -- "$cur" ))
  else
    COMPREPLY=( $( compgen -W '$(ls)' -- $cur ))
  fi
}

_lm-cmd_cycle() {
  local cur prev words cword
  _init_completion || return
  if [[ $cword -eq 2 ]]; then
    COMPREPLY=( $( compgen -W 'create destroy get list props reset set start stop' -- "$cur" ))
  else
    COMPREPLY=( $( compgen -W '$(ls)' -- $cur ))
  fi
}

_lm-cmd_macro() {
  local cur prev words cword
  _init_completion || return
  if [[ $cword -eq 2 ]]; then
    COMPREPLY=( $( compgen -W 'create destroy edit get list props result run set' -- "$cur" ))
  else
    COMPREPLY=( $( compgen -W '$(ls)' -- $cur ))
  fi
}

_lm-cmd_config() {
  local cur prev words cword
  _init_completion || return
  if [[ $cword -eq 2 ]]; then
    COMPREPLY=( $( compgen -W 'get props save set' -- "$cur" ))
  else
    COMPREPLY=( $( compgen -W '$(ls)' -- $cur ))
  fi
}

_lm-cmd_user() {
  local cur prev words cword
  _init_completion || return
  if [[ $cword -eq 2 ]]; then
    COMPREPLY=( $( compgen -W 'create destroy key list password' -- "$cur" ))
  else
    COMPREPLY=( $( compgen -W '$(ls)' -- $cur ))
  fi
}

_lm-cmd_key() {
  local cur prev words cword
  _init_completion || return
  if [[ $cword -eq 2 ]]; then
    COMPREPLY=( $( compgen -W 'create destroy list props regenerate set' -- "$cur" ))
  else
    COMPREPLY=( $( compgen -W '$(ls)' -- $cur ))
  fi
}

_lm-cmd_file() {
  local cur prev words cword
  _init_completion || return
  if [[ $cword -eq 2 ]]; then
    COMPREPLY=( $( compgen -W 'create get mod unlink upload' -- "$cur" ))
  else
    COMPREPLY=( $( compgen -W '$(ls)' -- $cur ))
  fi
}

_lm-cmd_cvar() {
  local cur prev words cword
  _init_completion || return
  if [[ $cword -eq 2 ]]; then
    COMPREPLY=( $( compgen -W 'all delete get set' -- "$cur" ))
  else
    COMPREPLY=( $( compgen -W '$(ls)' -- $cur ))
  fi
}

_lm-cmd_log() {
  local cur prev words cword
  _init_completion || return
  if [[ $cword -eq 2 ]]; then
    COMPREPLY=( $( compgen -W 'critical debug error get info rotate warning' -- "$cur" ))
  else
    COMPREPLY=( $( compgen -W '$(ls)' -- $cur ))
  fi
}

_lm-cmd() {
  local cur prev words cword
  _init_completion || return
  if [[ $cword -eq 1 ]]; then
    COMPREPLY=( $( compgen -W 'clear cmd config controller create cvar cycle debug destroy dump edit ext file history job key list lock log macro remote reset rule save server set state test toggle unlock user' -- "$cur" ))
  else
    case "${words[1]}" in
      config|controller|cvar|cycle|edit|ext|file|job|key|log|macro|rule|server|user)
        _lm-cmd_${words[1]}
        ;;
      *)
        COMPREPLY=( $( compgen -W '$(ls)' -- $cur ))
        ;;
    esac
  fi
}

complete -F _lm-cmd lm-cmd