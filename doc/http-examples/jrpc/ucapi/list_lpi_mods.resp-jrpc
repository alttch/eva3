HTTP/1.1 200 OK
Cache-Control: no-cache, no-store, must-revalidate
Content-Length: 8988
Content-Type: application/json
Expires: 0
Pragma: no-cache

{
    "id": 1,
    "jsonrpc": "2.0",
    "result": [
        {
            "api": 9,
            "author": "Altertech Group, https://www.altertech.com/",
            "connections": {
                "port": "primary"
            },
            "description": "Basic LPI for simple devices",
            "features": [
                "status",
                "status_mp",
                "mu_status",
                "mu_status_mp",
                "port_get",
                "aao_get",
                "action",
                "action_mp",
                "port_set",
                "aao_set",
                "events",
                "value"
            ],
            "help": "\nBasic LPI for simple unit status control (on/off) and monitoring. Support\nstatus 0 and 1. Unit driver config fields should have property 'port' with a\nport label/number for PHI. 'io_label' prop allows to rename 'port' e.g. to\n'socket' for a more fancy unit configuration. Each port may be specified as a\nsingle value or contain an array of values, in this case multiple ports are\nused simultaneously.\n\nYou may set i: before the port label/number, e.g. i:2, to return/use inverted\nport state.\n",
            "id": null,
            "license": "Apache License 2.0",
            "logic": "basic status on/off",
            "lpi_id": null,
            "mod": "basic",
            "oid": null,
            "phi_id": null,
            "version": "1.3.0"
        },
        {
            "api": 9,
            "author": "Altertech Group, https://www.altertech.com/",
            "connections": {
                "port": "primary"
            },
            "description": "test LPI mod",
            "features": [
                "status",
                "status_mp",
                "mu_status",
                "mu_status_mp",
                "port_get",
                "aao_get",
                "action",
                "action_mp",
                "port_set",
                "aao_set",
                "events",
                "value"
            ],
            "help": "\nBasic LPI for simple unit status control (on/off) and monitoring. Support\nstatus 0 and 1. Unit driver config fields should have property 'port' with a\nport label/number for PHI. 'io_label' prop allows to rename 'port' e.g. to\n'socket' for a more fancy unit configuration. Each port may be specified as a\nsingle value or contain an array of values, in this case multiple ports are\nused simultaneously.\n\nYou may set i: before the port label/number, e.g. i:2, to return/use inverted\nport state.\n",
            "id": null,
            "license": "Apache License 2.0",
            "logic": "basic status on/off",
            "lpi_id": null,
            "mod": "btest",
            "oid": null,
            "phi_id": null,
            "version": "1.3.0"
        },
        {
            "api": 9,
            "author": "Altertech Group, https://www.altertech.com/",
            "connections": {
                "port": "primary"
            },
            "description": "Enhanced sensor LPI",
            "features": [
                "value",
                "value_mp",
                "mu_value",
                "mu_value_mp",
                "port_get",
                "aao_get",
                "cfg",
                "events"
            ],
            "help": "\nEnhanced LPI to work with groups of sensors, supports various typical\nfunctions: working with a sensor groups, returning the average, max or min\ngroup value etc. Can use 'max_diff' param to control the maximum difference of\nthe sensor value in a group and automatically remove possible broken sensors\nfrom the result (if the number of good sensors in a group is more than broken).\n\nFor multiupdates all ports specified in mu should be lists.\n\nThis LPI is dedicated to work with a groups of sensors and doesn't support\nsingle sensor event processing.\n",
            "id": null,
            "license": "Apache License 2.0",
            "logic": "single and group polling",
            "lpi_id": null,
            "mod": "esensor",
            "oid": null,
            "phi_id": null,
            "version": "1.2.0"
        },
        {
            "api": 9,
            "author": "Altertech Group, https://www.altertech.com/",
            "connections": {
                "dport": "destination",
                "port": "power"
            },
            "description": "Multistep LPI (opener)",
            "features": [
                "action",
                "action_mp",
                "port_set",
                "aao_set"
            ],
            "help": "\nSolves typical logic task: turning the motor direction and run the motor for\nthe specified number of seconds, to control i.e. window opening, door opening,\nmanipulators of the robots.\n\nThe duration of the motor work is specified in 'steps' unit driver\nconfiguration param, each step corresponds to the next status.\n\nWarmup is used to let the motor additional number of seconds for the starting\nstates between first and last.\n\nTuning is used to make sure the motor drivers the target to starting and\nfinishing position (i.e. completely opens/closes the door).\n\nts and te. Sometimes it's pretty hard to calculate the proper position for the\nmiddle states. In this case LPI will ask motor to go all the way to the start\nstate (if target status <= ts) and then back to the target, or all the way to\nthe end and to the target (if target status >= te).\n\nUnit driver config fields should have property 'port' with a\nport label/number for PHI. 'io_label' prop allows to rename 'port', 'dport'\ni.e. to 'socket', 'dsocket' for a more fancy unit configuration.  Each port and\ndport may be specified as a single value or contain an array of values, in this\ncase multiple ports are used simultaneously.\n\nFor reversible DC motor schema use \"port\" for plus (up) and \"dport\" for minus\n(down).\n\nYou may set i: before the port label/number, i.e. i:2, to return/use inverted\nport state. This works both for power and direction ports.\n",
            "id": null,
            "license": "Apache License 2.0",
            "logic": "multistep with delays",
            "lpi_id": null,
            "mod": "multistep",
            "oid": null,
            "phi_id": null,
            "version": "1.2.1"
        },
        {
            "api": 9,
            "author": "Altertech Group, https://www.altertech.com/",
            "connections": {
                "port": "primary"
            },
            "description": "Basic sensor LPI",
            "features": [
                "value",
                "mu_value",
                "port_get",
                "aao_get",
                "cfg",
                "events"
            ],
            "help": "\nBasic LPI to work with sensors, doesn't process sensor value in any way,\nreturning it to controller as-is. ",
            "id": null,
            "license": "Apache License 2.0",
            "logic": "single polling",
            "lpi_id": null,
            "mod": "sensor",
            "oid": null,
            "phi_id": null,
            "version": "1.2.0"
        },
        {
            "api": 9,
            "author": "Altertech Group, https://www.altertech.com/",
            "connections": {
                "port": "primary"
            },
            "description": "Single port sensor LPI",
            "features": [
                "value",
                "port_get",
                "events",
                "ssp"
            ],
            "help": "\nLPI to work with sensor PHIs which provide state for single sensor only\n(port=1), doesn't process sensor value in any way, returning it to controller\nas-is. ",
            "id": null,
            "license": "Apache License 2.0",
            "logic": "single port",
            "lpi_id": null,
            "mod": "ssp",
            "oid": null,
            "phi_id": null,
            "version": "1.2.0"
        },
        {
            "api": 9,
            "author": "Altertech Group, https://www.altertech.com/",
            "connections": {
                "port": "primary"
            },
            "description": "Single port unit LPI",
            "features": [
                "status",
                "port_get",
                "port_set",
                "events",
                "usp",
                "value",
                "action"
            ],
            "help": "\nLPI to work with unit PHIs which provide/manage state for single unit only\n(port=1), doesn't process unit status in any way, returning it to controller\nas-is. For unit actions port is not required, however LPI sets it to 1 when\ntransmitting to PHIs.\n",
            "id": null,
            "license": "Apache License 2.0",
            "logic": "single port, basic status on/off",
            "lpi_id": null,
            "mod": "usp",
            "oid": null,
            "phi_id": null,
            "version": "1.3.0"
        }
    ]
}