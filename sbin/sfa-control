#!/bin/bash

PYTHON=python3

D=`realpath $0`
cd `dirname ${D}`/..

WAIT_TO_KILL=40 # sec * 2 before kill -KILL

export EVA_DIR=`pwd`

PIDFILE=${EVA_DIR}/var/sfa.pid
SFA=${EVA_DIR}/sbin/sfaserv.py
SFA_ARGS=
SAFE_RUN_PIDFILE=${EVA_DIR}/var/sfa_safe.pid
WATCHDOG_PIDFILE=${EVA_DIR}/var/sfa_watchdog.pid
SAFE_RUN=${EVA_DIR}/sbin/safe-run.sh
WATCHDOG=${EVA_DIR}/sbin/watchdog.sh

source ./etc/eva_servers

function exec_cmd {
    if [ "x${SFA_USER}" == "x" ]; then
        $*
    else
        su ${SFA_USER} -c "$*"
    fi
}

case $1 in
start)
    echo 'Starting SFA server'
    ps xa|grep -v grep|grep ${SFA} > /dev/null 2>&1
    if [ $? == 0 ]; then
        echo "already started"
        exit 2
    fi
    exec_cmd ${SAFE_RUN} ${SAFE_RUN_PIDFILE} ${PYTHON} ${SFA} ${SFA_ARGS} > /dev/null &
    ${WATCHDOG} sfa ${SFA} > /dev/null &
    ;;
launch)
    env EVA_CORE_ENABLE_CC=1 ${PYTHON} ${SFA} ${SFA_ARGS}
    ;;
stop)
    ps xa|grep -v grep|grep ${SFA} > /dev/null 2>&1
    [ $? == 0 ] || exit 1
    echo -n 'Stopping SFA server '
    PID_SAFE_RUN=
    PID_SFA=
    PID_WATCHDOG=
    [ -f ${SAFE_RUN_PIDFILE} ] && PID_SAFE_RUN=`cat ${SAFE_RUN_PIDFILE}`
    [ -f ${WATCHDOG_PIDFILE} ] && PID_WATCHDOG=`cat ${WATCHDOG_PIDFILE}`
    [ -f ${PIDFILE} ] && PID_SFA=`cat ${PIDFILE}`
    if [ "x${PID_WATCHDOG}" != "x" ]; then
        kill ${PID_WATCHDOG} > /dev/null 2>&1
        rm -f ${WATCHDOG_PIDFILE}
    fi
    if [ "x${PID_SAFE_RUN}" != "x" ]; then
        kill ${PID_SAFE_RUN} > /dev/null 2>&1
        rm -f ${SAFE_RUN_PIDFILE}
    fi
    if [ "x${PID_SFA}" != "x" ]; then
        kill ${PID_SFA} > /dev/null 2>&1
        I=0
        while kill -0 ${PID_SFA} > /dev/null 2>&1; do
            echo -n '.'
            sleep 0.5
            I=`expr ${I} + 1`
            if [ ${I} -ge ${WAIT_TO_KILL} ]; then
                echo -n  'killing '
                kill -KILL ${PID_SFA}
                break
            fi
        done
        rm -f ${PIDFILE}
    fi
    ps xa|grep -v grep|grep ${SFA}|awk '{ print $1 }'|xargs kill > /dev/null 2>&1
    if [ $? = 0 ]; then
        sleep 10
        ps xa|grep -v grep|grep ${SFA}|awk '{ print $1 }'|xargs kill -9 > /dev/null 2>&1
    fi
    echo ' stopped'
    ;;
restart)
    ./sbin/sfa-control stop $2
    ./sbin/sfa-control start $2
    ;;
logrotate)
    [ -f ${PIDFILE} ] && kill -HUP `cat ${PIDFILE}`
    ;;
status)
    ps xa|grep -v grep|grep ${SFA} > /dev/null 2>&1
    if [ $? == 0 ]; then
        echo "running"
    else
        echo "stopped"
    fi
    ;;
version)
    exec_cmd ${PYTHON} ${SFA} -V
    ;;
*)
    echo "Usage: sfa-control start|stop|restart|logrotate|version"
esac
