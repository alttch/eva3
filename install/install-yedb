#!/usr/bin/env bash

[ -z "${EVA_REPOSITORY_URL}" ] && EVA_REPOSITORY_URL=https://get.eva-ics.com

D=`realpath $0`
cd `dirname ${D}`/..

source ./lib/eva/registry/info

if [ ! -x ./yedb/yedb-cli ] || [ "${YEDB_FORCE_REINSTALL}" ]; then
  mkdir -p ./yedb
  if [ "${YEDB_TARBALL_PATH}" ]; then
    echo "Extracting YEDB from ${YEDB_TARBALL_PATH}"
    tar xzf ${YEDB_TARBALL_PATH} -C ./yedb || exit 2
  else
    ARCH=$(uname -m)
    [[ "$ARCH" == arm* ]] && ARCH=arm
    case $ARCH in
      arm)
        SFX=arm-musleabihf
        ;;
      i686)
        SFX=i686-musl
        ;;
      x86_64)
        SFX=x86_64-musl
        ;;
      *)
        echo "Unsupported architecture. Please install YEDB manually"
        exit 4
        ;;
    esac
    wget ${EVA_REPOSITORY_URL}/yedb/yedb-${YEDB_VERSION}-${SFX}.tar.gz -O yedb.tgz || exit 2
    tar xzf yedb.tgz -C ./yedb || exit 2
    rm -f yedb.tgz
  fi
fi

./yedb/yedb-cli version >& /dev/null || exit 3

YEDB_VERSION_HAS=$(./yedb/yedb-cli version|grep ^yedb|awk '{ print $3 }')

YEDB_VERSION_C=$(echo -n $YEDB_VERSION|sed 's/^/10/'|sed 's/\./10/g')
YEDB_VERSION_HAS_C=$(echo -n $YEDB_VERSION_HAS|sed 's/^/10/'|sed 's/\./10/g')

if [ ${YEDB_VERSION_HAS_C} -lt ${YEDB_VERSION_C} ]; then
  echo "YEDB version: ${YEDB_VERSION_HAS}, required: ${YEDB_VERSION}"
  if [ "${YEDB_FORCE_REINSTALL}" ]; then
    exit 3
  else
    YEDB_FORCE_REINSTALL=1 $0
    exit $?
  fi
fi

echo "YEDB installed, version: ${YEDB_VERSION}"

exit 0
