#!/usr/bin/env bash

[ -L ./venv/bin/yedb ] && rm -f ./venv/bin/yedb

XOPTS=$PIP_EXTRA_OPTIONS

if [ "$1" ]; then
  EVA_DIR="$1"
  D=$(realpath "$0")
  MY_DIR=$(dirname "${D}")
else
  D=$(realpath "$0")
  MY_DIR=$(dirname "${D}")
  EVA_DIR=${MY_DIR}/..
  cd "${EVA_DIR}" || exit 1
fi

EVA_DIR=$(realpath "${EVA_DIR}")

if [ -d ${EVA_DIR}/yedb ]; then
  source <(${EVA_DIR}/sbin/key-as-source config/venv 2>/dev/null)
  if [ -z "$PYTHON" ]; then
    echo "Unable to read registry key"
    exit 1
  fi
else
  [ -f ${EVA_DIR}/etc/venv ] && source ${EVA_DIR}/etc/venv
  [ -z $PYTHON ] && PYTHON=python3
fi

[ -f "$HOME/.cargo/env" ] && source "$HOME/.cargo/env"

if [ ! -f "${EVA_DIR}/venv/bin/pip3" ]; then
  [ -d "${EVA_DIR}/venv" ] && rm -rf "${EVA_DIR}/venv"
  [ "$USE_SYSTEM_PIP" = "1" ] && O_PIP="" || O_PIP="--without-pip"
  [ "${SYSTEM_SITE_PACKAGES}" = "1" ]  && O_SSITE="--system-site-packages" || O_SSITE=""
  "${PYTHON}" -m venv ${O_PIP} ${O_SSITE} "${EVA_DIR}/venv" || exit 2
  source "${EVA_DIR}/venv/bin/activate"
  if [ "$USE_SYSTEM_PIP" != "1" ]; then
    ( curl https://bootstrap.pypa.io/get-pip.py | "${EVA_DIR}/venv/bin/python" ) || exit 3
  fi
  deactivate
fi

PTS=
for s in $SKIP; do
  [ "$PTS" ] && PTS="$PTS|"
  PTS="$PTS^$s="
done

ETS=
for s in $EXTRA; do
  [ "$ETS" ] && ETS="$ETS|"
  ETS="$ETS$s"
done

PIP=${EVA_DIR}/venv/bin/pip

if [ "$PTS" ] || [ "$ETS" ]; then
  [ ! "$PTS" ] && PTS=__undefined__
  TMPFILE=$(mktemp /tmp/eva-venv.XXXXXX)
  grep -vE "$PTS" "${MY_DIR}/mods.list" > "${TMPFILE}"
  echo -e "\n$(echo "$ETS" | tr '|' '\n')" >> "${TMPFILE}"
  PKGLIST=${TMPFILE}
else
  PKGLIST=${MY_DIR}/mods.list
fi

[ "$XOPTS" ] && PIP_EXTRA_OPTIONS=$XOPTS

${PIP} install ${PIP_EXTRA_OPTIONS} -r ${PKGLIST}
E=$?

[ "$PTS" ] || [ "$ETS" ] && rm -f "${TMPFILE}"

echo "Flushing data to disk..."

sync

if [ $E -eq 0 ]; then
  echo "VENV rebuilt successfully"
  [ ! -f ./venv/bin/yedb ] && ln -sf /usr/local/bin/yedb ./venv/bin/yedb
fi

exit ${E}
